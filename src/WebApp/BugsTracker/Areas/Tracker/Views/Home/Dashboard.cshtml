@model DashboardViewModel

<partial name="../Shared/Partial/Common/_modalHolderPartial.cshtml" />

<!--First row -->
<div class="row p-3">
    <div class="first-row">
        <div class="first-row-header row d-flex px-3 py-2 w-100 justify-content-between">
            <div class="title"> Projects </div>
            @if (User.IsInRole("Admin") || User.IsInRole("Demo Admin"))
            {
                <div class="project-add-holder"><a href="#" id="create-project" data-toggle="modal" data-target="#crupdateProjectModal" class="x-btn blue"> New Project</a></div>
            }

        </div>
        <div class="row w-100">
            <div class="table-responsive project-table">
                <table class="table">
                    <thead class="project-thead">
                        <tr>
                            <th scope="col" class="text-muted">Project</th>
                            <th scope="col" class="text-muted">Description</th>
                            @if (User.IsInRole("Admin") || User.IsInRole("Demo Admin"))
                            {
                                <th scope="col" class="text-muted text-center">Action</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var project in Model.Projects)
                        {
                        <tr>
                            <td class="d-none">@project.Id</td>

                            <td>
                                <a asp-controller="Ticket"
                                   asp-action="ByProject"
                                   asp-route-projectId="@project.Id"
                                   asp-route-projectName="@project.Name">
                                    @project.Name
                                </a>
                            </td>
                            <td>@project.Description</td>
                            @if (User.IsInRole("Admin") || User.IsInRole("Demo Admin"))
                            {
                                <td class="text-center">
                                    <div class="dropdown">
                                        <a href="#" class="dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </a>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <a class="dropdown-item update-btn" href="#" data-toggle="modal" data-target="#crupdateProjectModal"> Edit</a>
                                            <a class="dropdown-item delete-btn" href="#" data-toggle="modal" data-target="#deleteProjectModal"> Delete</a>
                                        </div>
                                    </div>
                                </td>
                            }

                        </tr>

                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row d-flex justify-content-sm-between align-items-center w-100">
            <div class="pagination-holder d-flex p-2">

                @if (Model.Pager.EndPage > 1)
                {
                    @if (Model.Pager.CurrentPage > 1)
                    {
                        <a class="purple-circle angle" asp-action="Dashboard" asp-route-page="1">
                            <i class="fas fa-angle-double-left"></i>
                        </a>
                        <a class="purple-circle angle" asp-action="Dashboard" asp-route-page="@(Model.Pager.CurrentPage - 1)">
                            <i class="fas fa-angle-left"></i>
                        </a>
                    }
                    @for (int i = Model.Pager.CurrentPage; i <= Model.Pager.CurrentPage + 3; i++)
                    {
                        if (i > Model.Pager.EndPage)
                        {
                            break;
                        }
                        if (Model.Pager.CurrentPage == i)
                        {
                            <a class="purple-circle  @(i == Model.Pager.CurrentPage ? "filled" : "")">@i</a>
                        }
                        else
                        {
                            <a class="purple-circle" asp-action="Dashboard" asp-route-page="@i">@i</a>
                        }
                    }   
                }
                @if (Model.Pager.CurrentPage < Model.Pager.EndPage)
                {
                    <a class="purple-circle angle" asp-action="Dashboard" asp-route-page="@(Model.Pager.CurrentPage + 1)">
                        <i class="fas fa-angle-right"></i>
                    </a>
                    <a class="purple-circle angle" asp-action="Dashboard" asp-route-page="@(Model.Pager.TotalPages)">
                        <i class="fas fa-angle-double-right"></i>
                    </a>
                }
            </div>

            <div class="p-2 ml-auto">
                <p>
                    Showing @Model.Pager.StartRecord to @Model.Pager.EndRecord of @Model.Pager.TotalItems Rows.
                </p>
            </div>
        </div>
    </div>
</div>

<!--Second row -->
<div class="row">
    <div class="col-lg-4 col-md-6 col-sm-6">
        <div class="card">
            <div class="card-header">
                Tickets by Status
            </div>
            <div class="card-body">
                <canvas class="pie-chart" id="ticket-status-pie"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-4 col-md-6 col-sm-6">
        <div class="card">
            <div class="card-header">
                Tickets by Priority
            </div>
            <div class="card-body">
                <canvas class="pie-chart" id="ticket-priority-pie"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-4 col-md-6 col-sm-6">
        <div class="card">
            <div class="card-header">
                Tickets by Type
            </div>
            <div class="card-body">
                <canvas class="pie-chart" id="ticket-type-pie"></canvas>
            </div>
        </div>
    </div>

</div>


@section scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script src="~/js/Tracker.js"></script>
    <script src="~/lib/Chart.js/chart.min.js"></script>
    <script src="~/lib/chartjs-plugin-datalabels/chartjs-plugin-datalabels.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            const ticketDiagramData = '/Tracker/Home/GetDiagramsData';

            $.ajax({
                'type': "GET",
                'global': false,
                'dataType': 'json',
                'url': ticketDiagramData,
                'success': function (data) {
                    console.log(data)
                    CreatePies(data);

                },
            });
            handleModals();
        });

        function CreatePies(data) {
            var priority = data.prioritiesCount;
            var type = data.typesCount;
            var status = data.statusesCount;
            Chart.register(ChartDataLabels);

            var ticketTypePie = new Chart($("#ticket-type-pie"),
                {
                    type: 'doughnut',

                    data: {
                        labels: ["Bug", "Feature request", "Training", "Documentation"],
                        datasets: [{
                            label: 'Tickets by type',
                            data: [type.bugCount, type.featureCount, type.trainingCount, type.docCount],
                            backgroundColor: [
                                'rgb(255, 99, 132)',
                                'rgb(54, 162, 235)',
                                'rgb(255, 205, 86)',
                                'rgb(155, 205, 50)'
                            ],
                            hoverOffset: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'right',
                                labels: {
                                    usePointStyle: true,
                                    boxWidth: 6
                                }
                            },
                            datalabels: {
                                color: "white"
                            }
                        }
                    }
                });

            var ticketStatusPie = new Chart($("#ticket-status-pie"), {
                type: 'doughnut',

                data: {
                    labels: ["Resolved", "New", "In Progress", "Open"],
                    datasets: [{
                        label: 'Ticket by status',
                        data: [status.resolvedCount, status.newCount, status.inProgressCount, status.openCount],
                        backgroundColor: [
                            'rgb(255, 205, 86)',
                            'rgb(54, 162, 235)',
                            'rgb(255, 99, 132)',
                            'rgb(200, 17, 172)'
                        ],
                        hoverOffset: 4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'right',
                            labels: {
                                usePointStyle: true,
                                boxWidth: 6
                            }
                        },
                        datalabels: {
                            color: "white"
                        }
                    }
                }
            });

            var ticketPriorityPie = new Chart($("#ticket-priority-pie"), {
                
                type: 'doughnut',

                data: {
                    labels: ["Immediate", "High", "Medium", "Low"],
                    datasets: [{
                        label: 'Ticket priorities',
                        data: [priority.immediateCount, priority.highCount, priority.mediumCount, priority.lowCount],
                        backgroundColor: [
                            'rgb(255, 99, 132)',
                            'rgb(54, 162, 235)',
                            'rgb(255, 205, 86)',
                            'rgb(100, 205, 186)'
                        ],
                        hoverOffset: 4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'right',
                            labels: {
                                usePointStyle: true,
                                boxWidth: 6
                            }
                        },
                        datalabels: {
                            color: "white"
                        }
                    }
                }
            });
        }

        function handleModals() {
            const createModalUrl = '/Tracker/Project/loadCreateModal';
            const updateModalUrl = '/Tracker/Project/loadUpdateModal';
            const deleteModalUrl = '/Tracker/Project/loadDeleteModal';

            var createBtn = $("#create-project");
            var updateBtns = document.querySelectorAll('.update-btn');
            var deleteBtns = document.querySelectorAll('.delete-btn');

            $(document).ajaxComplete(function () {
                $.validator.unobtrusive.parse(document);
            });

            AttachModalCreateListener(createBtn, createModalUrl);
            AttachTableModalListeners(updateBtns, updateModalUrl);
            AttachTableModalListeners(deleteBtns, deleteModalUrl);
        }
    </script>
}